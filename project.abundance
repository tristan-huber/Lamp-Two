{
    "atomType": "Molecule",
    "name": "Lamp Two",
    "x": 0,
    "y": 0,
    "uniqueID": "6e738bd6-6ca5-4b54-9b07-218ccac0ee96",
    "ioValues": [],
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.98,
            "y": 0.5,
            "uniqueID": "de71af3c-5614-4902-9bb6-b2ac820b33dd",
            "ioValues": []
        },
        {
            "atomType": "Code",
            "name": "Code",
            "x": 0.13932291666666666,
            "y": 0.431547619047619,
            "uniqueID": "8fc14e2b-d3bb-4f02-ae1b-86e135adf95b",
            "ioValues": [
                {
                    "name": "x1",
                    "ioValue": 5,
                    "currentEquation": "5"
                },
                {
                    "name": "y1",
                    "ioValue": 10,
                    "currentEquation": "10"
                },
                {
                    "name": "x2",
                    "ioValue": 10,
                    "currentEquation": "10"
                },
                {
                    "name": "y2",
                    "ioValue": 0,
                    "currentEquation": "0"
                },
                {
                    "name": "x3",
                    "ioValue": 15,
                    "currentEquation": "15"
                },
                {
                    "name": "y3",
                    "ioValue": -5,
                    "currentEquation": "-5"
                },
                {
                    "name": "x4",
                    "ioValue": 20,
                    "currentEquation": "20"
                },
                {
                    "name": "y4",
                    "ioValue": 0,
                    "currentEquation": "0"
                }
            ],
            "codeVersion": 1,
            "code": "\n      const Inputs = [\n        {inputName: \"x1\", type: \"number\", defaultValue: 5},\n        {inputName: \"y1\", type: \"number\", defaultValue: 10},\n        {inputName: \"x2\", type: \"number\", defaultValue: 5},\n        {inputName: \"y2\", type: \"number\", defaultValue: 10},\n        {inputName: \"x3\", type: \"number\", defaultValue: 5},\n        {inputName: \"y3\", type: \"number\", defaultValue: 10},\n        {inputName: \"x4\", type: \"number\", defaultValue: 5},\n        {inputName: \"y4\", type: \"number\", defaultValue: 10},\n      ]\n      //This defines the molecules inputs and creates variables with the same names which can be referenced in the code\n      const points = [[x1, y1], [x2, y2], [x3, y3], [x4, y4]]\n  \n      const spl = replicad.draw();\n      points.forEach((p) => {\n        spl.smoothSplineTo(p)\n      })\n\n      return spl.done();\n\n      return {geometry: [spl.close()], plane: replicad.Plane(\"XY\"), tags:[], bom: [], color: \"#555555\"}\n\n      "
        }
    ],
    "allConnectors": [],
    "unitsKey": "MM",
    "fileTypeVersion": 1,
    "compiledBom": {},
    "filetypeVersion": 1
}